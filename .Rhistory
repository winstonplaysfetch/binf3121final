fit2 = contrasts.fit(fit,cont.matrix)
fit2 = eBayes(fit2)
# lfc =1 for 2-fold changes
result = decideTests(fit2, p.value=0.05, lfc=1)
colnames = c("M6PR.TvU",	"COL.UvT",	"M6PRvCOL.T",	"M6PRvCOL.U")
rownames = c("upregulated", "downregulated")
upregulated = c(sum(result[,1]>0), sum(result[,2]>0), sum(result[,3]>0), sum(result[,4]>0))
downregulated = c(sum(result[,1]<0), sum(result[,2]<0), sum(result[,3]<0), sum(result[,4]<0))
resultsMatrix = matrix(c(upregulated, downregulated), nrow=2, dimnames=list(rownames, colnames))
barplot(as.matrix(resultsMatrix), legend = rownames, beside=TRUE)
cont.matrix2= makeContrasts(
M6PR.TvU = M6PR.U - M6PR.T,
COL.UvT = COL.U - COL.T,
Diff = (M6PR.U - M6PR.T) - (COL.U - COL.T),
levels = exp_design)
fit3 = contrasts.fit(fit,cont.matrix2)
fit3 = eBayes(fit3)
# lfc =1 for 2-fold changes
result = decideTests(fit3, p.value=0.05, lfc=1)
vennDiagram(result)
vennCounts(result)
f="ftp://ftp.arabidopsis.org/Microarrays/Affymetrix/affy_ATH1_array_elements-2010-12-20.txt"
annots = read.delim(f, na.strings = "", fill=TRUE, header=T, sep="\t")
annots=annots[,c(1,5,6)] #Save selected (columns 1,5,6) info in annots table
row.names(annots)=annots$array_element_name
top.M6PR.TvU.merged=merge(annots,top.M6PR.TvU,by="row.names")
N=dim(eset)[1]
top.M6PR.TvU = topTable(fit3,coef=1,number=N,p.value=0.05)
top.COL.UvT = topTable(fit3,coef=2,number=N,p.value=0.05)
top.Diff = topTable(fit3,coef=3,number=N,p.value=0.05)
row.names(annots)=annots$array_element_name
top.M6PR.TvU.merged=merge(annots,top.M6PR.TvU,by="row.names")
top.COL.UvT.merged=merge(annots,top.COL.UvT,by="row.names")
top.Diff.merged=merge(annots,top.Diff,by="row.names")
genes.M6PR.TvU = unique(top.M6PR.TvU.merged$locus)
genes.COL.UvT = unique(top.COL.UvT.merged$locus)
genes.Diff = unique(top.Diff.merged$locus)
intersection = intersect(genes.COL.UvT,genes.M6PR.TvU)
top.COL.UvT.merged
length(top.COL.UvT.merged)
cont.matrix= makeContrasts(
M6PRvCOL.U = M6PR.U - COL.U,
M6PRvCOL.T = M6PR.T - COL.T,
M6PR.TvU = M6PR.U - M6PR.T,
COL.UvT = COL.U - COL.T,
levels = exp_design)
fit2 = contrasts.fit(fit,cont.matrix)
fit2 = eBayes(fit2)
# lfc =1 for 2-fold changes
result = decideTests(fit2, p.value=0.05, lfc=1)
colnames = c("M6PRvCOL.T", "M6PRvCOL.U", "M6PR.TvU", "COL.UvT")
rownames = c("upregulated", "downregulated")
upregulated = c(sum(result[,1]>0), sum(result[,2]>0), sum(result[,3]>0), sum(result[,4]>0))
downregulated = c(sum(result[,1]<0), sum(result[,2]<0), sum(result[,3]<0), sum(result[,4]<0))
resultsMatrix = matrix(c(upregulated, downregulated), nrow=2, dimnames=list(rownames, colnames))
barplot(as.matrix(resultsMatrix), legend = rownames, beside=TRUE)
cont.matrix= makeContrasts(
M6PRvCOL.U = M6PR.U - COL.U,
M6PRvCOL.T = M6PR.T - COL.T,
M6PR.TvU = M6PR.U - M6PR.T,
COL.UvT = COL.U - COL.T,
levels = exp_design)
fit2 = contrasts.fit(fit,cont.matrix)
fit2 = eBayes(fit2)
# lfc =1 for 2-fold changes
result = decideTests(fit2, p.value=0.05, lfc=1)
colnames = c("M6PRvCOL.T", "M6PRvCOL.U", "M6PR.TvU", "COL.UvT")
rownames = c("upregulated", "downregulated")
upregulated = c(sum(result[,1]>0), sum(result[,2]>0), sum(result[,3]>0), sum(result[,4]>0))
downregulated = c(sum(result[,1]<0), sum(result[,2]<0), sum(result[,3]<0), sum(result[,4]<0))
resultsMatrix = matrix(c(upregulated, downregulated), nrow=2, dimnames=list(rownames, colnames))
barplot(as.matrix(resultsMatrix), legend = rownames, beside=TRUE)
cont.matrix
result
sum(result[,1]>0)
result
fit2
resultsMatrix
exp_design = model.matrix(~0 + TS)
colnames(exp_design) = levels(TS)
exp_design
#Required libraries
library(affy)
library(limma)
library(RSQLite)
#Import data from sources
pd = read.AnnotatedDataFrame("samples.txt",header=TRUE,sep=",",row.names=1)
mydata = ReadAffy(filenames=pd$filename,phenoData=pd,verbose=TRUE)
sampleNames(mydata)=row.names(pData(pd))
#Call functions to organize data
eset = rma(mydata)
expression_data = exprs(eset)
TS = paste(pd$genotype,pd$treatment,sep=".")
TS = factor(TS, levels= c("M6PR.U","M6PR.T","COL.U","COL.T"))
exp_design = model.matrix(~0 + TS)
colnames(exp_design) = levels(TS)
exp_design
fit=lmFit(eset,exp_design)
cont.matrix= makeContrasts(
M6PRvCOL.U = M6PR.U - COL.U,
M6PRvCOL.T = M6PR.T - COL.T,
M6PR.TvU = M6PR.U - M6PR.T,
COL.UvT = COL.U - COL.T,
levels = exp_design)
fit2 = contrasts.fit(fit,cont.matrix)
fit2 = eBayes(fit2)
# lfc =1 for 2-fold changes
result = decideTests(fit2, p.value=0.05, lfc=1)
colnames = c("M6PRvCOL.T", "M6PRvCOL.U", "M6PR.TvU", "COL.UvT")
rownames = c("upregulated", "downregulated")
upregulated = c(sum(result[,1]>0), sum(result[,2]>0), sum(result[,3]>0), sum(result[,4]>0))
downregulated = c(sum(result[,1]<0), sum(result[,2]<0), sum(result[,3]<0), sum(result[,4]<0))
resultsMatrix = matrix(c(upregulated, downregulated), nrow=2, dimnames=list(rownames, colnames))
barplot(as.matrix(resultsMatrix), legend = rownames, beside=TRUE)
cont.matrix= makeContrasts(
M6PR.TvU = M6PR.U - M6PR.T,
COL.UvT = COL.U - COL.T,
M6PRvCOL.T = M6PR.T - COL.T,
M6PRvCOL.U = M6PR.U - COL.U,
levels = exp_design)
fit2 = contrasts.fit(fit,cont.matrix)
fit2 = eBayes(fit2)
# lfc =1 for 2-fold changes
result = decideTests(fit2, p.value=0.05, lfc=1)
colnames = c("M6PR.TvU",	"COL.UvT",	"M6PRvCOL.T",	"M6PRvCOL.U")
rownames = c("upregulated", "downregulated")
upregulated = c(sum(result[,1]>0), sum(result[,2]>0), sum(result[,3]>0), sum(result[,4]>0))
downregulated = c(sum(result[,1]<0), sum(result[,2]<0), sum(result[,3]<0), sum(result[,4]<0))
resultsMatrix = matrix(c(upregulated, downregulated), nrow=2, dimnames=list(rownames, colnames))
barplot(as.matrix(resultsMatrix), legend = rownames, beside=TRUE)
cont.matrix= makeContrasts(
M6PRvCOL.U = M6PR.U - COL.U,
M6PRvCOL.T = M6PR.T - COL.T,
M6PR.TvU = M6PR.U - M6PR.T,
COL.UvT = COL.U - COL.T,
levels = exp_design)
fit2 = contrasts.fit(fit,cont.matrix)
fit2 = eBayes(fit2)
# lfc =1 for 2-fold changes
result = decideTests(fit2, p.value=0.05, lfc=1)
colnames = c("M6PRvCOL.T", "M6PRvCOL.U", "M6PR.TvU", "COL.UvT")
rownames = c("upregulated", "downregulated")
upregulated = c(sum(result[,1]>0), sum(result[,2]>0), sum(result[,3]>0), sum(result[,4]>0))
downregulated = c(sum(result[,1]<0), sum(result[,2]<0), sum(result[,3]<0), sum(result[,4]<0))
resultsMatrix = matrix(c(upregulated, downregulated), nrow=2, dimnames=list(rownames, colnames))
barplot(as.matrix(resultsMatrix), legend = rownames, beside=TRUE)
resultsMatrix
cont.matrix= makeContrasts(
M6PR.TvU = M6PR.U - M6PR.T,
COL.UvT = COL.U - COL.T,
M6PRvCOL.T = M6PR.T - COL.T,
M6PRvCOL.U = M6PR.U - COL.U,
levels = exp_design)
fit2 = contrasts.fit(fit,cont.matrix)
fit2 = eBayes(fit2)
# lfc =1 for 2-fold changes
result = decideTests(fit2, p.value=0.05, lfc=1)
colnames = c("M6PR.TvU",	"COL.UvT",	"M6PRvCOL.T",	"M6PRvCOL.U")
rownames = c("upregulated", "downregulated")
upregulated = c(sum(result[,1]>0), sum(result[,2]>0), sum(result[,3]>0), sum(result[,4]>0))
downregulated = c(sum(result[,1]<0), sum(result[,2]<0), sum(result[,3]<0), sum(result[,4]<0))
resultsMatrix = matrix(c(upregulated, downregulated), nrow=2, dimnames=list(rownames, colnames))
barplot(as.matrix(resultsMatrix), legend = rownames, beside=TRUE)
resultsMatrix
sum(result[,1]>0
q
sum(result[,1]>0)
result
resultsMatrix
source("https://bioconductor.org/biocLite.R")
biocLite("affylmGUI")
browseVignettes("affylmGUI")
library(tkrplot)
?tkrplot
library(tcltk)
install.packages("tkrplot", dependencies=TRUE)
cont.matrix2= makeContrasts(
M6PR.TvU = M6PR.U - M6PR.T,
COL.UvT = COL.U - COL.T,
Diff = (M6PR.U - M6PR.T) - (COL.U - COL.T),
levels = exp_design)
fit3 = contrasts.fit(fit,cont.matrix2)
fit3 = eBayes(fit3)
# lfc =1 for 2-fold changes
result = decideTests(fit3, p.value=0.05, lfc=1)
vennDiagram(result)
vennCounts(result)
f="ftp://ftp.arabidopsis.org/Microarrays/Affymetrix/affy_ATH1_array_elements-2010-12-20.txt"
annots = read.delim(f, na.strings = "", fill=TRUE, header=T, sep="\t")
annots=annots[,c(1,5,6)] #Save selected (columns 1,5,6) info in annots table
resultsMatrix
results
result
# lfc =1 for 2-fold changes
result2 = decideTests(fit3, p.value=0.05, lfc=1)
vennDiagram(result2)
vennCounts(result2)
# lfc =1 for 2-fold changes
result = decideTests(fit2, p.value=0.05, lfc=1)
colnames = c("M6PR.TvU",	"COL.UvT",	"M6PRvCOL.T",	"M6PRvCOL.U")
rownames = c("upregulated", "downregulated")
upregulated = c(sum(result[,1]>0), sum(result[,2]>0), sum(result[,3]>0), sum(result[,4]>0))
downregulated = c(sum(result[,1]<0), sum(result[,2]<0), sum(result[,3]<0), sum(result[,4]<0))
resultsMatrix = matrix(c(upregulated, downregulated), nrow=2, dimnames=list(rownames, colnames))
barplot(as.matrix(resultsMatrix), legend = rownames, beside=TRUE)
result
resultsMatrix
N=dim(eset)[1]
top.M6PR.TvU = topTable(fit3,coef=1,number=N,p.value=0.05)
top.COL.UvT = topTable(fit3,coef=2,number=N,p.value=0.05)
top.Diff = topTable(fit3,coef=3,number=N,p.value=0.05)
genes.M6PR.TvU
length(genes.M6PR.TvU)
#Required libraries
library(affy)
library(limma)
library(RSQLite)
#Import data from sources
pd = read.AnnotatedDataFrame("samples.txt",header=TRUE,sep=",",row.names=1)
mydata = ReadAffy(filenames=pd$filename,phenoData=pd,verbose=TRUE)
sampleNames(mydata)=row.names(pData(pd))
#Call functions to organize data
eset = rma(mydata)
expression_data = exprs(eset)
TS = paste(pd$genotype,pd$treatment,sep=".")
TS = factor(TS, levels= c("M6PR.U","M6PR.T","COL.U","COL.T"))
exp_design = model.matrix(~0 + TS)
colnames(exp_design) = levels(TS)
exp_design
fit=lmFit(eset,exp_design)
cont.matrix= makeContrasts(
M6PR.TvU = M6PR.U - M6PR.T,
COL.UvT = COL.U - COL.T,
M6PRvCOL.T = M6PR.T - COL.T,
M6PRvCOL.U = M6PR.U - COL.U,
levels = exp_design)
fit2 = contrasts.fit(fit,cont.matrix)
fit2 = eBayes(fit2)
# lfc =1 for 2-fold changes
result = decideTests(fit2, p.value=0.05, lfc=1)
colnames = c("M6PR.TvU",	"COL.UvT",	"M6PRvCOL.T",	"M6PRvCOL.U")
rownames = c("upregulated", "downregulated")
upregulated = c(sum(result[,1]>0), sum(result[,2]>0), sum(result[,3]>0), sum(result[,4]>0))
downregulated = c(sum(result[,1]<0), sum(result[,2]<0), sum(result[,3]<0), sum(result[,4]<0))
resultsMatrix = matrix(c(upregulated, downregulated), nrow=2, dimnames=list(rownames, colnames))
barplot(as.matrix(resultsMatrix), legend = rownames, beside=TRUE)
cont.matrix2= makeContrasts(
M6PR.TvU = M6PR.U - M6PR.T,
COL.UvT = COL.U - COL.T,
Diff = (M6PR.U - M6PR.T) - (COL.U - COL.T),
levels = exp_design)
fit3 = contrasts.fit(fit,cont.matrix2)
fit3 = eBayes(fit3)
# lfc =1 for 2-fold changes
result2 = decideTests(fit3, p.value=0.05, lfc=1)
vennDiagram(result2)
vennCounts(result2)
row.names(annots)=annots$array_element_name
top.COL.UvT.merged=merge(annots,top.COL.UvT,by="row.names") #(A) Pathways mainly affected by salt stress
top.M6PR.TvU.merged=merge(annots,top.M6PR.TvU,by="row.names") #(B) Pathways mainly activated by the M6PR transgene
top.Diff.merged=merge(annots,top.Diff,by="row.names") #(C) Pathways affected by both salt stress and the M6PR transgene
f="ftp://ftp.arabidopsis.org/Microarrays/Affymetrix/affy_ATH1_array_elements-2010-12-20.txt"
annots = read.delim(f, na.strings = "", fill=TRUE, header=T, sep="\t")
annots=annots[,c(1,5,6)] #Save selected (columns 1,5,6) info in annots table
N=dim(eset)[1]
top.M6PR.TvU = topTable(fit3,coef=1,number=N,p.value=0.05)
top.COL.UvT = topTable(fit3,coef=2,number=N,p.value=0.05)
top.Diff = topTable(fit3,coef=3,number=N,p.value=0.05)
row.names(annots)=annots$array_element_name
top.COL.UvT.merged=merge(annots,top.COL.UvT,by="row.names") #(A) Pathways mainly affected by salt stress
top.M6PR.TvU.merged=merge(annots,top.M6PR.TvU,by="row.names") #(B) Pathways mainly activated by the M6PR transgene
top.Diff.merged=merge(annots,top.Diff,by="row.names") #(C) Pathways affected by both salt stress and the M6PR transgene
genes.M6PR.TvU = unique(top.M6PR.TvU.merged$locus)
genes.COL.UvT = unique(top.COL.UvT.merged$locus)
genes.Diff = unique(top.Diff.merged$locus)
intersection = intersect(genes.COL.UvT,genes.M6PR.TvU)
cont.matrix= makeContrasts(
M6PR.TvU = M6PR.U - M6PR.T,
COL.UvT = COL.U - COL.T,
M6PRvCOL.T = M6PR.T - COL.T,
M6PRvCOL.U = M6PR.U - COL.U,
levels = exp_design)
fit2 = contrasts.fit(fit,cont.matrix)
fit2 = eBayes(fit2)
cont.matrix= makeContrasts(
M6PR.TvU = M6PR.U - M6PR.T,
COL.UvT = COL.U - COL.T,
M6PRvCOL.T = M6PR.T - COL.T,
M6PRvCOL.U = M6PR.U - COL.U,
levels = exp_design)
gcfit2 = contrasts.fit(gcfit,cont.matrix)
fit=lmFit(eset_rma,exp_design)
#Required libraries
library(affy)
library(limma)
library(RSQLite)
library(gcrma)
#Import data from sources
pd = read.AnnotatedDataFrame("samples.txt",header=TRUE,sep=",",row.names=1)
mydata = ReadAffy(filenames=pd$filename,phenoData=pd,verbose=TRUE)
sampleNames(mydata)=row.names(pData(pd))
#Call functions to organize data
#found no significant difference between rma and gcrma but wanted to try to match the experimental methods
eset_rma = rma(mydata)
eset_gc = gcrma(mydata)
expression_data = exprs(eset)
TS = paste(pd$genotype,pd$treatment,sep=".")eset = gcrma(mydata)
TS = paste(pd$genotype,pd$treatment,sep=".")
TS = factor(TS, levels= c("M6PR.U","M6PR.T","COL.U","COL.T"))
exp_design = model.matrix(~0 + TS)
colnames(exp_design) = levels(TS)
exp_design
fit=lmFit(eset_rma,exp_design)
gcfit=lmFit(eset_gc,exp_design)
cont.matrix= makeContrasts(
M6PR.TvU = M6PR.U - M6PR.T,
COL.UvT = COL.U - COL.T,
M6PRvCOL.T = M6PR.T - COL.T,
M6PRvCOL.U = M6PR.U - COL.U,
levels = exp_design)
fit2 = contrasts.fit(fit,cont.matrix)
fit2 = eBayes(fit2)
cont.matrix= makeContrasts(
M6PR.TvU = M6PR.U - M6PR.T,
COL.UvT = COL.U - COL.T,
M6PRvCOL.T = M6PR.T - COL.T,
M6PRvCOL.U = M6PR.U - COL.U,
levels = exp_design)
gcfit2 = contrasts.fit(gcfit,cont.matrix)
gcfit2 = eBayes(gcfit2)
# lfc =1 for 2-fold changes
result = decideTests(fit2, p.value=0.05, lfc=1)
colnames = c("M6PR.TvU",	"COL.UvT",	"M6PRvCOL.T",	"M6PRvCOL.U")
rownames = c("upregulated", "downregulated")
upregulated = c(sum(result[,1]>0), sum(result[,2]>0), sum(result[,3]>0), sum(result[,4]>0))
downregulated = c(sum(result[,1]<0), sum(result[,2]<0), sum(result[,3]<0), sum(result[,4]<0))
resultsMatrix = matrix(c(upregulated, downregulated), nrow=2, dimnames=list(rownames, colnames))
barplot(as.matrix(resultsMatrix), legend = rownames, beside=TRUE)
# lfc =1 for 2-fold changes
gc_result = decideTests(gcfit2, p.value=0.05, lfc=1)
gc_colnames = c("M6PR.TvU",	"COL.UvT",	"M6PRvCOL.T",	"M6PRvCOL.U")
gc_rownames = c("upregulated", "downregulated")
gc_upregulated = c(sum(gc_result[,1]>0), sum(gc_result[,2]>0), sum(gc_result[,3]>0), sum(gc_result[,4]>0))
gc_downregulated = c(sum(gc_result[,1]<0), sum(gc_result[,2]<0), sum(gc_result[,3]<0), sum(gc_result[,4]<0))
gc_resultsMatrix = matrix(c(gc_upregulated, gc_downregulated), nrow=2, dimnames=list(gc_rownames, gc_colnames))
gc_barplot(as.matrix(gc_resultsMatrix), legend = rownames, beside=TRUE)
# lfc =1 for 2-fold changes
gc_result = decideTests(gcfit2, p.value=0.05, lfc=1)
gc_colnames = c("M6PR.TvU",	"COL.UvT",	"M6PRvCOL.T",	"M6PRvCOL.U")
gc_rownames = c("upregulated", "downregulated")
gc_upregulated = c(sum(gc_result[,1]>0), sum(gc_result[,2]>0), sum(gc_result[,3]>0), sum(gc_result[,4]>0))
gc_downregulated = c(sum(gc_result[,1]<0), sum(gc_result[,2]<0), sum(gc_result[,3]<0), sum(gc_result[,4]<0))
gc_resultsMatrix = matrix(c(gc_upregulated, gc_downregulated), nrow=2, dimnames=list(gc_rownames, gc_colnames))
barplot(as.matrix(gc_resultsMatrix), legend = rownames, beside=TRUE)
cont.matrix2= makeContrasts(
M6PR.TvU = M6PR.U - M6PR.T,
COL.UvT = COL.U - COL.T,
M6PRvCOL.T = M6PR.T - COL.T,
M6PRvCOL.U = M6PR.U - COL.U,
levels = exp_design)
gcfit2 = contrasts.fit(gcfit,cont.matrix2)
gcfit2 = eBayes(gcfit2)
cont.matrix3= makeContrasts(
M6PR.TvU = M6PR.U - M6PR.T,
COL.UvT = COL.U - COL.T,
Diff = (M6PR.U - M6PR.T) - (COL.U - COL.T),
levels = exp_design)
gcfit3 = contrasts.fit(gcfit,cont.matrix3)
gcfit3 = eBayes(gcfit3)
# lfc =1 for 2-fold changes
gc_result2 = decideTests(fit3, p.value=0.05, lfc=1)
vennDiagram(gc_result2)
vennCounts(gc_result2)
genes.M6PR.TvU
N=dim(eset)[1]
top.M6PR.TvU = topTable(fit3,coef=1,number=N,p.value=0.01)
top.COL.UvT = topTable(fit3,coef=2,number=N,p.value=0.01)
top.Diff = topTable(fit3,coef=3,number=N,p.value=0.01)
row.names(annots)=annots$array_element_name
top.COL.UvT.merged=merge(annots,top.COL.UvT,by="row.names") #(A) Pathways mainly affected by salt stress
top.M6PR.TvU.merged=merge(annots,top.M6PR.TvU,by="row.names") #(B) Pathways mainly activated by the M6PR transgene
top.Diff.merged=merge(annots,top.Diff,by="row.names") #(C) Pathways affected by both salt stress and the M6PR transgene
genes.M6PR.TvU = unique(top.M6PR.TvU.merged$locus)
genes.COL.UvT = unique(top.COL.UvT.merged$locus)
genes.Diff = unique(top.Diff.merged$locus)
intersection = intersect(genes.COL.UvT,genes.M6PR.TvU)
genes.M6PR.TvU
N=dim(eset)[1]
top.M6PR.TvU = topTable(fit3,coef=1,number=N,p.value=0.05)
top.COL.UvT = topTable(fit3,coef=2,number=N,p.value=0.05)
top.Diff = topTable(fit3,coef=3,number=N,p.value=0.05)
row.names(annots)=annots$array_element_name
top.COL.UvT.merged=merge(annots,top.COL.UvT,by="row.names") #(A) Pathways mainly affected by salt stress
top.M6PR.TvU.merged=merge(annots,top.M6PR.TvU,by="row.names") #(B) Pathways mainly activated by the M6PR transgene
top.Diff.merged=merge(annots,top.Diff,by="row.names") #(C) Pathways affected by both salt stress and the M6PR transgene
genes.M6PR.TvU = unique(top.M6PR.TvU.merged$locus)
genes.COL.UvT = unique(top.COL.UvT.merged$locus)
genes.Diff = unique(top.Diff.merged$locus)
intersection = intersect(genes.COL.UvT,genes.M6PR.TvU)
genes.Diff
length(genes.Diff)
length(genes.M6PR.TvU)
length(genes.COL.UvT)
sum(gc_result[,1]>0
)
sum(gc_result[,2]>0)
gc_resultsMatrix
length(genes.COL.UvT)
length(top.COL.UvT.merged)
length(top.COL.UvT)
top.COL.UvT
top.COL.UvT.merged
#Note: their M6Pr.100mM-v-col-100mM column is akin to our 'Diff' column.
ours=c(162/5252, 3996/5252, 1094/5252)
theirs=c(764/5511,3239/5511,1039/5511)
t.test(ours,theirs)
#Required libraries
library(affy)
library(limma)
library(RSQLite)
library(gcrma)
#Import data from sources
pd = read.AnnotatedDataFrame("samples.txt",header=TRUE,sep=",",row.names=1)
mydata = ReadAffy(filenames=pd$filename,phenoData=pd,verbose=TRUE)
sampleNames(mydata)=row.names(pData(pd))
#Call functions to organize data
eset_rma = rma(mydata)
eset_gc = gcrma(mydata)
expression_data = exprs(eset_gc)
TS = paste(pd$genotype,pd$treatment,sep=".")
TS = factor(TS, levels= c("M6PR.U","M6PR.T","COL.U","COL.T"))
exp_design = model.matrix(~0 + TS)
colnames(exp_design) = levels(TS)
exp_design
fit=lmFit(eset_rma,exp_design)
gcfit=lmFit(eset_gc,exp_design)
cont.matrix= makeContrasts(
M6PR.TvU = M6PR.U - M6PR.T,
COL.UvT = COL.U - COL.T,
M6PRvCOL.T = M6PR.T - COL.T,
M6PRvCOL.U = M6PR.U - COL.U,
levels = exp_design)
fit2 = contrasts.fit(fit,cont.matrix)
fit2 = eBayes(fit2)
cont.matrix2= makeContrasts(
M6PR.TvU = M6PR.U - M6PR.T,
COL.UvT = COL.U - COL.T,
M6PRvCOL.T = M6PR.T - COL.T,
M6PRvCOL.U = M6PR.U - COL.U,
levels = exp_design)
gcfit2 = contrasts.fit(gcfit,cont.matrix2)
gcfit2 = eBayes(gcfit2)
# lfc =1 for 2-fold changes
result = decideTests(fit2, p.value=0.05, lfc=1)
colnames = c("M6PR.TvU",	"COL.UvT",	"M6PRvCOL.T",	"M6PRvCOL.U")
rownames = c("upregulated", "downregulated")
upregulated = c(sum(result[,1]>0), sum(result[,2]>0), sum(result[,3]>0), sum(result[,4]>0))
downregulated = c(sum(result[,1]<0), sum(result[,2]<0), sum(result[,3]<0), sum(result[,4]<0))
resultsMatrix = matrix(c(upregulated, downregulated), nrow=2, dimnames=list(rownames, colnames))
barplot(as.matrix(resultsMatrix), legend = rownames, beside=TRUE)
# lfc =1 for 2-fold changes
gc_result = decideTests(gcfit2, p.value=0.05, lfc=1)
gc_colnames = c("M6PR.TvU",	"COL.UvT",	"M6PRvCOL.T",	"M6PRvCOL.U")
gc_rownames = c("upregulated", "downregulated")
gc_upregulated = c(sum(gc_result[,1]>0), sum(gc_result[,2]>0), sum(gc_result[,3]>0), sum(gc_result[,4]>0))
gc_downregulated = c(sum(gc_result[,1]<0), sum(gc_result[,2]<0), sum(gc_result[,3]<0), sum(gc_result[,4]<0))
gc_resultsMatrix = matrix(c(gc_upregulated, gc_downregulated), nrow=2, dimnames=list(gc_rownames, gc_colnames))
barplot(as.matrix(gc_resultsMatrix), legend = gc_rownames, beside=TRUE)
cont.matrix3= makeContrasts(
M6PR.TvU = M6PR.U - M6PR.T,
COL.UvT = COL.U - COL.T,
Diff = (M6PR.U - M6PR.T) - (COL.U - COL.T),
levels = exp_design)
gcfit3 = contrasts.fit(gcfit,cont.matrix3)
gcfit3 = eBayes(gcfit3)
# lfc =1 for 2-fold changes
gc_result2 = decideTests(gcfit3, p.value=0.05, lfc=1)
vennDiagram(gc_result2)
#vennCounts(gc_result2)
f="ftp://ftp.arabidopsis.org/Microarrays/Affymetrix/affy_ATH1_array_elements-2010-12-20.txt"
annots = read.delim(f, na.strings = "", fill=TRUE, header=T, sep="\t")
annots=annots[,c(1,5,6)] #Save selected (columns 1,5,6) info in annots table
N=dim(eset_gc)[1]
#VennDiagram
#top.M6PR.TvU = topTable(fit3,coef=1,number=N,p.value=0.05)
#top.COL.UvT = topTable(fit3,coef=2,number=N,p.value=0.05)
#top.Diff = topTable(fit3,coef=3,number=N,p.value=0.05)
#GC barplot
top.M6PR.TvU = topTable(gcfit2,coef=1,number=N,p.value=0.05)
top.COL.UvT = topTable(gcfit2,coef=2,number=N,p.value=0.05)
top.M6PRvCOL.T = topTable(gcfit2,coef=3,number=N,p.value=0.05)
top.M6PRvCOL.U = topTable(gcfit2,coef=4,number=N,p.value=0.05)
row.names(annots)=annots$array_element_name
#Venn Diagram
#top.COL.UvT.merged=merge(annots,top.COL.UvT,by="row.names") #(A) Pathways mainly affected by salt stress
#top.M6PR.TvU.merged=merge(annots,top.M6PR.TvU,by="row.names") #(B) Pathways mainly activated by the M6PR transgene
#top.Diff.merged=merge(annots,top.Diff,by="row.names") #(C) Pathways affected by both salt stress and the M6PR transgene
#GC Barplot
top.COL.UvT.merged = merge(annots,top.COL.UvT,by="row.names") #(A) Pathways mainly affected by salt stress
top.M6PR.TvU.merged = merge(annots,top.M6PR.TvU,by="row.names")  #(B) pathways mainly activated by the M6PR transgene
top.M6PRvCOL.T.merged = merge(annots,top.M6PRvCOL.T,by="row.names") #(C) pathways affected by salt stress and the M6PR transgene
top.M6PRvCOL.U.merged = merge(annots,top.M6PRvCOL.U,by="row.names") #(D) Pathways affected by the presence of the M6PR gene
#VennDiagram
#genes.M6PR.TvU = unique(top.M6PR.TvU.merged$locus)
#genes.COL.UvT = unique(top.COL.UvT.merged$locus)
#genes.Diff = unique(top.Diff.merged$locus)
#intersection = intersect(genes.COL.UvT,genes.M6PR.TvU)
#GC Barplot
genes.COL.UvT = unique(top.COL.UvT.merged$locus) #1224
genes.M6PR.TvU = unique(top.M6PR.TvU.merged$locus) #30
genes.M6PRvCOL.T = unique(top.M6PRvCOL.T.merged$locus) #37
genes.M6PRvCOL.U = unique(top.M6PRvCOL.U.merged$locus) #1553
